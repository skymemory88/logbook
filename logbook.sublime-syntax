%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - logbook
scope: source.logbook

contexts:
  # The prototype context is prepended to all contexts but those setting
  # meta_include_prototype: false.
  prototype:
    - include: comments

  main:
    # The main context is the initial starting point of our syntax.
    # Include other contexts from here (or specify them directly).
    - include: keywords
    - include: numbers
    - include: strings
    - include: months
    - include: operations
    - include: warnings

  keywords:
    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(Note|note)\b'
      scope: keyword.control.logbook

  months:
    - match: '\b(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sept|Oct|Nov|Dec)\b'
      scope: entity.name.type.logbook
  warnings:
    - match: '\b(Warning|warning)\b'
      scope: invalid.illegal.logobook
  numbers:
    - match: '\b(-)?[E0-9.]+\b'
      scope: constant.numeric.logbook
  operations:
    # additional coloring for highlighting operations taken
    - match: ''
      scope: support.constant.logbook
  strings:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character.
    - match: '("|{|})'
      scope: punctuation.definition.string.begin.logbook
      push: inside_string

  inside_string:
    - meta_include_prototype: false
    - meta_scope: string.quoted.double.logbook
    - match: '\.'
      scope: constant.character.escape.logbook
    - match: '("|{|}|[|])'
      scope: punctuation.definition.string.end.logbook
      pop: true

  comments:
    # Comments begin with a '//' and finish at the end of the line.
    - match: ': '
      scope: punctuation.definition.comment.logbook
      push:
        # This is an anonymous context push for brevity.
        - meta_scope: comment.line.double-slash.logbook
        - match: $\n?
          pop: true